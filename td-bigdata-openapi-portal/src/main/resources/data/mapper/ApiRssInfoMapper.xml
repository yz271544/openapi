<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.teradata.portal.admin.subscribe.dao.ApiRssInfoMapper" >
  <resultMap id="BaseResultMap" type="com.teradata.portal.admin.subscribe.pojo.ApiRssInfo" >
    <result column="rss_id" property="rssId" jdbcType="INTEGER" />
    <result column="rss_start_time" property="rssStartTime" jdbcType="BIGINT" />
    <result column="rss_end_time" property="rssEndTime" jdbcType="BIGINT" />
    <result column="appkey" property="appkey" jdbcType="VARCHAR" />
    <result column="api_id" property="apiId" jdbcType="INTEGER" />
    <result column="api_version" property="apiVersion" jdbcType="INTEGER" />
    <result column="api_name" property="apiName" jdbcType="VARCHAR" />
    <result column="api_sort" property="apiSort" jdbcType="INTEGER" />
    <result column="api_sort_name" property="apiSortName" jdbcType="VARCHAR" />
    <result column="api_cls_code" property="apiClsCode" jdbcType="INTEGER" />
    <result column="api_cls_desc" property="apiClsDesc" jdbcType="VARCHAR" />
    <result column="data_cycle_type" property="dataCycleType" jdbcType="INTEGER" />
    <result column="data_cycle_desc" property="dataCycleDesc" jdbcType="VARCHAR" />
    <result column="form_code" property="formCode" jdbcType="VARCHAR" />
    <result column="encode" property="encode" jdbcType="VARCHAR" />
    <result column="req_arg" property="reqArg" jdbcType="VARCHAR" />
    <result column="req_arg_render" property="reqArgRender" jdbcType="VARCHAR" />
    <result column="respn_arg" property="respnArg" jdbcType="VARCHAR" />
    <result column="respn_arg_render" property="respnArgRender" jdbcType="VARCHAR" />
    <result column="push_arg" property="pushArg" jdbcType="VARCHAR" />
    <result column="push_arg_render" property="pushArgRender" jdbcType="VARCHAR" />
    <result column="retn_form_finger" property="retnFormFinger" jdbcType="VARCHAR" />
    <result column="retn_data_finger" property="retnDataFinger" jdbcType="VARCHAR" />
    <result column="trigger_methd" property="triggerMethd" jdbcType="INTEGER" />
    <result column="trigger_methd_desc" property="triggerMethdDesc" jdbcType="VARCHAR" />
    <result column="trigger_sorc" property="triggerSorc" jdbcType="VARCHAR" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="eff_flag" property="effFlag" jdbcType="INTEGER" />
    <result column="eff_desc" property="effDesc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
     <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    rss_id, rss_start_time, rss_end_time, appkey, api_id, api_version, api_name, api_sort, 
    api_sort_name, api_cls_code, api_cls_desc, data_cycle_type, data_cycle_desc, form_code, 
    encode, req_arg, req_arg_render, respn_arg, respn_arg_render, push_arg, push_arg_render, 
    retn_form_finger, retn_data_finger, trigger_methd, trigger_methd_desc, trigger_sorc, 
    priority, eff_flag, eff_desc
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.teradata.portal.admin.subscribe.pojo.ApiRssInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from opi.api_rss_info_vw
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from opi.api_rss_info_vw
    where rss_id = #{rssId,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="com.teradata.portal.admin.subscribe.pojo.ApiRssInfo" >
     insert into opi.api_rss_info (rss_id, rss_start_time, rss_end_time, 
      appkey, api_id, api_version, 
      form_code, encode, req_arg, 
      req_arg_render, respn_arg, respn_arg_render, 
      push_arg, push_arg_render, retn_form_finger, 
      retn_data_finger, trigger_methd, trigger_sorc, 
      priority, eff_flag)
    values (#{rssId,jdbcType=INTEGER}, #{rssStartTime,jdbcType=BIGINT}, #{rssEndTime,jdbcType=BIGINT}, 
      #{appkey,jdbcType=VARCHAR}, #{apiId,jdbcType=INTEGER}, #{apiVersion,jdbcType=INTEGER}, 
      #{formCode,jdbcType=VARCHAR}, #{encode,jdbcType=VARCHAR}, #{reqArg,jdbcType=VARCHAR}, 
      #{reqArgRender,jdbcType=VARCHAR}, #{respnArg,jdbcType=VARCHAR}, #{respnArgRender,jdbcType=VARCHAR}, 
      #{pushArg,jdbcType=VARCHAR}, #{pushArgRender,jdbcType=VARCHAR}, #{retnFormFinger,jdbcType=VARCHAR}, 
      #{retnDataFinger,jdbcType=VARCHAR}, #{triggerMethd,jdbcType=INTEGER}, #{triggerSorc,jdbcType=VARCHAR}, 
      #{priority,jdbcType=INTEGER}, #{effFlag,jdbcType=INTEGER})
  </insert>
  
  <select id="countByExample" parameterType="com.teradata.portal.admin.subscribe.pojo.ApiRssInfoExample" resultType="java.lang.Integer" >
    select count(*) from opi.api_rss_info_vw
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByPrimaryKeySelective" parameterType="com.teradata.portal.admin.subscribe.pojo.ApiRssInfo" >
    update opi.api_rss_info
    <set >
      <if test="rssStartTime != null" >
        rss_start_time = #{rssStartTime,jdbcType=BIGINT},
      </if>
      <if test="rssEndTime != null" >
        rss_end_time = #{rssEndTime,jdbcType=BIGINT},
      </if>
      <if test="appkey != null" >
        appkey = #{appkey,jdbcType=VARCHAR},
      </if>
      <if test="apiId != null" >
        api_id = #{apiId,jdbcType=INTEGER},
      </if>
      <if test="apiVersion != null" >
        api_version = #{apiVersion,jdbcType=INTEGER},
      </if>
      <if test="formCode != null" >
        form_code = #{formCode,jdbcType=VARCHAR},
      </if>
      <if test="encode != null" >
        encode = #{encode,jdbcType=VARCHAR},
      </if>
      <if test="reqArg != null" >
        req_arg = #{reqArg,jdbcType=VARCHAR},
      </if>
      <if test="reqArgRender != null" >
        req_arg_render = #{reqArgRender,jdbcType=VARCHAR},
      </if>
      <if test="respnArg != null" >
        respn_arg = #{respnArg,jdbcType=VARCHAR},
      </if>
      <if test="respnArgRender != null" >
        respn_arg_render = #{respnArgRender,jdbcType=VARCHAR},
      </if>
      <if test="pushArg != null" >
        push_arg = #{pushArg,jdbcType=VARCHAR},
      </if>
      <if test="pushArgRender != null" >
        push_arg_render = #{pushArgRender,jdbcType=VARCHAR},
      </if>
      <if test="retnFormFinger != null" >
        retn_form_finger = #{retnFormFinger,jdbcType=VARCHAR},
      </if>
      <if test="retnDataFinger != null" >
        retn_data_finger = #{retnDataFinger,jdbcType=VARCHAR},
      </if>
      <if test="triggerMethd != null" >
        trigger_methd = #{triggerMethd,jdbcType=INTEGER},
      </if>
      <if test="triggerSorc != null" >
        trigger_sorc = #{triggerSorc,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="effFlag != null" >
        eff_flag = #{effFlag,jdbcType=INTEGER},
      </if>
    </set>
    where rss_id = #{rssId,jdbcType=INTEGER}
  </update>
  
  
  <resultMap id="apiInfoResult" type="com.teradata.portal.web.sandbox.pojo.ApiInfo">
    <id column="api_id" jdbcType="INTEGER" property="apiId" />
    <id column="api_version" jdbcType="INTEGER" property="apiVersion" />
    <result column="api_cls_code" property="apiClsCode" jdbcType="INTEGER" />
    <result column="api_stat_code" property="apiStatCode" jdbcType="INTEGER" />
    <result column="api_sort" jdbcType="INTEGER" property="apiSort" />
    <result column="data_strct_type_code" jdbcType="INTEGER" property="dataStrctTypeCode" />
    <result column="relse_type" jdbcType="CHAR" property="relseType" />
    <result column="api_name" jdbcType="VARCHAR" property="apiName" />
    <result column="api_desc" jdbcType="VARCHAR" property="apiDesc" />
    <result column="data_cycle_type" jdbcType="INTEGER" property="dataCycleType" />
    <result column="relse_persn" jdbcType="VARCHAR" property="relsePersn" />
    <result column="relse_time" jdbcType="TIMESTAMP" property="relseTime" />
    <result column="tab_scale_type" jdbcType="INTEGER" property="tabScaleType" />
    <result column="api_class_name" property="apiClassName" jdbcType="VARCHAR" />
     <!-- 联合主键  -->
    <collection column="{apiId=api_id,apiVersion=api_version}" ofType="com.teradata.portal.web.sandbox.pojo.StructApiArg" property="apiArgList" select="getStructApiArgWithOption" />
  </resultMap>
  
  <resultMap id="apiArgResult" type="com.teradata.portal.web.sandbox.pojo.StructApiArg">
    <id column="api_id" jdbcType="INTEGER" property="apiId" />
    <id column="api_version" jdbcType="INTEGER" property="apiVersion" />
    <id column="field_alias" jdbcType="VARCHAR" property="fieldAlias" />
    <result column="field_name" jdbcType="VARCHAR" property="fieldName" />
    <result column="field_eff_stat" jdbcType="INTEGER" property="fieldEffStat" />
    <result column="field_sorc_type" jdbcType="VARCHAR" property="fieldSorcType" />
    <result column="field_targt_type" jdbcType="VARCHAR" property="fieldTargtType" />
    <result column="field_title" jdbcType="VARCHAR" property="fieldTitle" />
    <result column="sync_must_type" property="syncMustType" jdbcType="INTEGER" />
    <result column="sync_must_one_grp_id" property="syncMustOneGrpId" jdbcType="INTEGER" />
    <result column="asyn_must_type" property="asynMustType" jdbcType="INTEGER" />
    <result column="asyn_must_one_grp_id" property="asynMustOneGrpId" jdbcType="INTEGER" />
    <result column="rss_must_type" property="rssMustType" jdbcType="INTEGER" />
    <result column="rss_must_one_grp_id" property="rssMustOneGrpId" jdbcType="INTEGER" />
    <result column="req_arg_id" jdbcType="CHAR" property="reqArgId" />
    <result column="req_arg_deflt_val" jdbcType="VARCHAR" property="reqArgDefltVal" />
    <result column="respn_arg_id" jdbcType="CHAR" property="respnArgId" />
    <result column="respn_arg_samp_val" jdbcType="VARCHAR" property="respnArgSampVal" />
    <result column="field_file_desc" jdbcType="VARCHAR" property="fieldFileDesc" />
    <result column="calc_princ_id" jdbcType="INTEGER" property="calcPrincId" />
    <result column="value_range" jdbcType="VARCHAR" property="valueRange" />
  </resultMap>
  
  <sql id="api_Column_List">
    api_id, api_version, api_cls_code,api_stat_code, api_sort, data_strct_type_code, relse_type, api_name, 
    api_desc, data_cycle_type, relse_persn, relse_time, tab_scale_type,exam_stat,api_class_name,trigger_methd,api_visit_methd
  </sql>
  
  <sql id="struct_Column_List">
    api_id, api_version, field_alias, field_name, field_eff_stat, field_sorc_type, field_targt_type,
    field_title, sync_must_type, sync_must_one_grp_id, asyn_must_type,asyn_must_one_grp_id,rss_must_type,rss_must_one_grp_id,
    req_arg_id, req_arg_deflt_val, respn_arg_id, respn_arg_samp_val, field_file_desc, calc_princ_id, value_range
  </sql>
  
  <select id="queryApiInfoWithOption" parameterType="hashMap" resultMap="apiInfoResult">
  	 select 
  	 <include refid="api_Column_List" />
  	 from opi.api_info where api_stat_code=1 and api_id = #{apiId} and api_version = #{apiVersion}
  	 <!--  select a.*,b.* from opi.api_info a left outer join opi.struct_api_arg b on a.api_id = b.api_id and a.api_version = b.api_version where a.api_stat_code='0'-->
  </select>
 
 
  <select id="getStructApiArgWithOption" parameterType="hashMap" resultMap="apiArgResult">
  	 select
  	 <include refid="struct_Column_List"></include>
     from opi.struct_api_arg where api_id = #{apiId} and api_version = #{apiVersion}
  </select>
</mapper>