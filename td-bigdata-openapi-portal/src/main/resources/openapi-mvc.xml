<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.1.xsd
      http://www.springframework.org/schema/mvc
	  http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd ">
	<!-- Enables the Spring MVC @Controller programming model -->
	<context:annotation-config />
	
	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">  
            <!-- org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter 构造时默认初始化如下messageConverters -->
            <beans:bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
            	<beans:property name="writeAcceptCharset" value="false" />
            </beans:bean>
            <beans:bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
            <beans:bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
                <property name="objectMapper">  
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">  
                        <property name="dateFormat">  
                            <bean class="java.text.SimpleDateFormat">  
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />  
                            </bean>  
                        </property>  
                    </bean>  
                </property>
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
			    <property name="objectMapper">
			        <bean class="com.github.miemiedev.mybatis.paginator.jackson2.PageListJsonMapper"/>
			    </property>
			</bean>
        </mvc:message-converters>
	</mvc:annotation-driven> 
	
	<mvc:view-controller path="/" view-name="redirect:dashboard/index.htm" />
	
    <!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<!-- 加载controller的时候,不加载service,因为此时事物并未生效,若此时加载了service,那么事物无法对service进行拦截 -->
	<context:component-scan base-package="com.teradata.portal.**.controller">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	
	<mvc:resources mapping="/css/**" location="classpath:/WEB-INF/css/,/WEB-INF/css/" />
	<mvc:resources mapping="/img/**" location="classpath:/WEB-INF/img/,/WEB-INF/img/" />
	<mvc:resources mapping="/js/**" location="classpath:/WEB-INF/js/,/WEB-INF/js/" />
	<mvc:resources mapping="/assets/**" location="classpath:/WEB-INF/assets/,/WEB-INF/assets/" />
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/login*"/>
			<mvc:exclude-mapping path="/"/>
			<mvc:exclude-mapping path="/resources/**"/>
			<mvc:exclude-mapping path="/css/**"/>
			<mvc:exclude-mapping path="/img/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/assets/**"/>
			<mvc:exclude-mapping path="/dashboard/index.htm"/>
			<mvc:exclude-mapping path="/document/**"/>
			<mvc:exclude-mapping path="/apiDisplay/**"/>
			<mvc:exclude-mapping path="/admin/**"/>
			<mvc:exclude-mapping path="/apitools/**"/>
			<mvc:exclude-mapping path="/selectRegist.htm"/>
			<mvc:exclude-mapping path="/apiUserRegistIndex.htm"/>
			<mvc:exclude-mapping path="/apiDeveloperRegistIndex.htm"/>
			<mvc:exclude-mapping path="/documentPublish/getOpenApiDirs.json"/>
			<beans:bean class="com.teradata.portal.web.system.interceptor.LoginAuthInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<bean id="stringHttpMessageConverter"    class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射， 配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射 -->
	<!-- <bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="cacheSeconds" value="0" />
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
				<ref bean="stringHttpMessageConverter" />
			</list>
		</property>
		
	</bean>

	<!-- **************************************************************** -->
	<!-- MESSAGE EXTERNALIZATION/INTERNATIONALIZATION -->
	<!-- Standard Spring MessageSource implementation -->
	<!-- **************************************************************** -->
	<!--<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="Messages" />
	</bean>-->

	<!-- **************************************************************** -->
	<!-- CONVERSION SERVICE -->
	<!-- Standard Spring formatting-enabled implementation -->
	<!-- **************************************************************** -->

	<!--<bean id="conversionService"
		  class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="formatters">
			<set>
				<bean class="thymeleafexamples.stsm.web.conversion.VarietyFormatter" />
				<bean class="thymeleafexamples.stsm.web.conversion.DateFormatter" />
			</set>
		</property>
	</bean>-->

	<!-- **************************************************************** -->
	<!-- THYMELEAF-SPECIFIC ARTIFACTS -->
	<!-- TemplateResolver <- TemplateEngine <- ViewResolver -->
	<!-- **************************************************************** -->

	<!-- Thymeleaf View Resolver - implementation of Spring's ViewResolver interface -->
	<!--<bean id="viewResolver" class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="order" value="1" />
		<property name="characterEncoding" value="UTF-8" />
		<property name="viewNames" value="*.html,*.xhtml" />
	</bean>-->

	<!-- Thymeleaf Template Engine (Spring4-specific version) -->
	<!--<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolvers">
			<set>
				<ref bean="templateResolver" />
			</set>
		</property>
	</bean>-->

	<!-- Thymeleaf Template Resolver -->
	<!--<bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".html"/>
		<property name="templateMode" value="HTML" />
		<property name="cacheable" value="false"/>
	</bean>-->
	
	<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
	<bean id="defaultViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:order="2">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="UTF-8">
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>


  
</beans>

